/*ZEHEADER_START*/
//////////////////////////////////////////////////////////////////////////////////////
//                                                                                  //
//  Core.h - Zinek Engine v0.04.02 Build 905 Source Code                                 
// -------------------------------------------------------------------------------- //
//  Copyright (c) 2007-2008 Zinek Engine group.                                     //
//  All rights reserved.                                                            //
//                                                                                  //
//                 READ TERMS BELLOW BEFORE TAKING ANY ACTION !                     //
//                                                                                  //
//  These coded instructions, statements, and computer programs contain             //
//  unpublished proprietary information written by Zinek Engine group and they are  //
//  protected by international copyright laws. This file is intellectual property   //
//  of the Zinek Engine group and author(s). Storing this file, using this file,    //
//  compiling this file, publishing this file to anykind media or network, editing  //
//  this file, selling this file, reading this file is probited without notice and  //
//  written permision of Y. Orcun Gokbulut. These terms at above can only be        //
//  changed by Y. Orcun GOKBULUT.                                                   //
//  author(s).                                                                      //
//*                                                                                *//
//  DESCRIPTION         :                                                           //
//  AUTHOR(S)           : Y. Orcun GOKBULUT                                         //
//*                                                                                *//
//////////////////////////////////////////////////////////////////////////////////////
/*ZEHEADER_END*/

#ifdef ZESHADER_COMPONENT0
#define ZESHADER_SKINTRANFORMATION
#endif
#ifdef ZESHADER_COMPONENT1
#define ZESHADER_DIFFUSEMAP
#endif
#ifdef ZESHADER_COMPONENT2
#define ZESHADER_NORMALMAP
#endif
#ifndef ZESHADER_COMPONENT3
#define ZESHADER_SPECULARMAP
#endif
#ifdef ZESHADER_COMPONENT4
#define ZESHADER_EMMISIVEMAP
#endif
#ifdef ZESHADER_COMPONENT5
#define ZESHADER_OCAPASITYMAP
#endif
#ifdef ZESHADER_COMPONENT6
#define ZESHADER_DETAILDIFFUSEMAP
#endif
#ifdef ZESHADER_COMPONENT7
#define ZESHADER_DETAILNORMALMAP
#endif
#ifdef ZESHADER_COMPONENT8
#define ZESHADER_REFLECTION
#endif
#ifdef ZESHADER_COMPONENT9
#define ZESHADER_REFRACTION
#endif
#ifdef ZESHADER_COMPONENT10
#define ZESHADER_LIGHTMAP
#endif
#ifdef ZESHADER_COMPONENT11
#define ZESHADER_DISTORTIONMAP
#endif

sampler DiffuseMap;
sampler OpasityMap;

float2 MaterialProperties0;

#define ZESHADER_DEPTHBIAS 0.00005
#define OpasityMask	MaterialProperties0[0]
#define MaterialOpasity	MaterialProperties0[0]


struct PS_INPUT
{
	float2 Depth    : TEXCOORD0;
   	#ifdef ZESHADER_TRANSPARANT
	float2 Texcoord			: TEXCOORD1;
	#endif

};


float4 ps_main(PS_INPUT Input) : COLOR0
{

	#ifdef ZESHADER_OPASITYMAP
		return float4(0.0f, 0.0f, 0.0f, tex2D(OpasityMap, Input.Texcoord).r);
	#else
		#ifdef ZESHADER_DIFFUSEMAP
		return float4(0.0f, 0.0f, 0.0f, tex2D(DiffuseMap, Input.Texcoord).a);
		#endif
	#endif

	return float4(0.0f, 0.0f, 0.0f, 1.0f);
} 